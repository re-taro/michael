name: Release
on:
  push:
    branches:
      - main
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTUP_MAX_RETRIES: 10
  MACOSX_DEPLOYMENT_TARGET: 10.7

jobs:
  release_please:
    name: Release Please
    runs-on: ubuntu-latest
    if: github.repository == 're-taro/michael'
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3.7.11
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          draft: true

  github_build:
    name: Build release binaries
    needs: release_please
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: michael-x86_64-unknown-linux-gnu.tar.gz
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: michael-x86_64-unknown-linux-musl.tar.gz
          - target: i686-unknown-linux-musl
            os: ubuntu-latest
            name: michael-i686-unknown-linux-musl.tar.gz
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            name: michael-aarch64-unknown-linux-musl.tar.gz
          - target: arm-unknown-linux-musleabihf
            os: ubuntu-latest
            name: michael-arm-unknown-linux-musleabihf.tar.gz
          - target: x86_64-apple-darwin
            os: macOS-11
            name: michael-x86_64-apple-darwin.tar.gz
          - target: aarch64-apple-darwin
            os: macOS-11
            name: michael-aarch64-apple-darwin.tar.gz
          - target: x86_64-unknown-freebsd
            os: ubuntu-latest
            name: michael-x86_64-unknown-freebsd.tar.gz
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3.5.3
      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - name: Setup | Install cross [Linux]
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@cross
      - name: Build | Build [Cargo]
        if: matrix.os != 'ubuntu-latest'
        run: cargo build --release --locked --target ${{ matrix.target }}
      - name: Build | Build [Cross]
        if: matrix.os == 'ubuntu-latest'
        run: cross build --release --locked --target ${{ matrix.target }}
      - name: Post Build | Prepare artifacts [-nix]
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czvf ../../../${{ matrix.name }} michael
          cd -
      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  upload_artifacts:
    name: Add Build Artifacts to Release
    needs: [release_please, github_build]
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v3.0.2
      - name: Setup | Checksums
        run: for file in michael-*/michael-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done
      - name: Setup | Publish Release
        run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=michael/michael
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: michael-*/michael-*
          tag_name: ${{ needs.release_please.outputs.tag_name }}

  cargo_publish:
    name: Publish Cargo Package
    runs-on: ubuntu-latest
    needs: [release_please, upload_artifacts]
    if: ${{ needs.release_please.outputs.release_created == 'true' }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3.5.3
      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Build | Publish
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
